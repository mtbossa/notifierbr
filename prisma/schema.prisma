generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                   BigInt               @id @default(autoincrement())
  name                 String               @db.VarChar
  brand                String               @db.VarChar
  style_code           String?              @unique @db.VarChar
  release_date         DateTime?            @db.Date
  current_lowest_price Decimal?             @db.Decimal(12, 2)
  created_at           DateTime             @default(now())
  updated_at           DateTime             @updatedAt
  stores               ProductsOnStore[]

  @@map("products")
}

model ProductsOnStore {
  id            BigInt                        @unique @default(autoincrement())
  products_id   BigInt
  stores_id     Int
  product_url   String                        @unique
  current_price Decimal?                      @db.Decimal(12, 2)
  available     Boolean                       @default(true)
  created_at    DateTime                      @default(now())
  updated_at    DateTime                      @updatedAt
  product       Product                       @relation(fields: [products_id], references: [id], onDelete: Cascade)
  store         Store                         @relation(fields: [stores_id], references: [id], onDelete: Cascade)
  sneaker_stock ProductsOnStoreSneakerStock[]

  @@id([products_id, stores_id, id])
  @@map("products_stores")
}

model Store {
  id                Int                  @id @default(autoincrement())
  name              String               @unique @db.VarChar(255)
  url               String               @unique @db.VarChar(255)
  created_at        DateTime             @default(now())
  updated_at        DateTime             @updatedAt
  products          ProductsOnStore[]

  @@map("stores")
}

model ProductsOnStoreSneakerStock {
  id                 BigInt          @unique @default(autoincrement())
  products_stores_id BigInt
  size               Int             @db.SmallInt
  stock              Int             @db.SmallInt
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt
  product_store      ProductsOnStore @relation(fields: [products_stores_id], references: [id], onDelete: Cascade)

  @@id([id, products_stores_id, size])
  @@map("products_stores_sneakers_stock")
}
